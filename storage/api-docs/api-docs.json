{
    "openapi": "3.0.0",
    "info": {
        "title": "TODO app documentation",
        "description": "TODO app Documentation",
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://todo-app.loc/api",
            "description": "TODO API Server"
        }
    ],
    "paths": {
        "/items": {
            "get": {
                "tags": [
                    "Items"
                ],
                "summary": "Get list of items",
                "description": "Returns list of items",
                "operationId": "getItemsList",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of item on page",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Search for name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "completed",
                        "in": "query",
                        "description": "Search for completed",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ItemCollection"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Items"
                ],
                "summary": "Store new item",
                "description": "Returns item data",
                "operationId": "storeItem",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreItemRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Item"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/items/{id}": {
            "get": {
                "tags": [
                    "Items"
                ],
                "summary": "Get item information",
                "description": "Returns item data",
                "operationId": "getItemById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Item id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Item"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Item not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Items"
                ],
                "summary": "Update existing item",
                "description": "Returns updated item data",
                "operationId": "updateItem",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Item id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateItemRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Item"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Item not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Items"
                ],
                "summary": "Delete existing item",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteItem",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Project id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Item not found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "StoreItemRequest": {
                "title": "Store Item request",
                "description": "Store Item request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new item",
                        "type": "string",
                        "example": "A nice item"
                    },
                    "description": {
                        "title": "description",
                        "description": "Description of the new item",
                        "type": "string",
                        "example": "This is new item's description"
                    }
                },
                "type": "object"
            },
            "UpdateItemRequest": {
                "title": "Update Item request",
                "description": "Update Item request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new item",
                        "type": "string",
                        "example": "A nice item"
                    },
                    "description": {
                        "title": "description",
                        "description": "Description of the new item",
                        "type": "string",
                        "example": "This is new item's description"
                    },
                    "completed": {
                        "title": "completed",
                        "description": "Status of the item",
                        "type": "boolean",
                        "example": "true"
                    }
                },
                "type": "object"
            },
            "ItemCollection": {
                "title": "ItemsResource",
                "description": "Items resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Item"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ItemsResource"
                }
            },
            "ItemResource": {
                "title": "ItemResource",
                "description": "Item resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Item"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ItemResource"
                }
            },
            "Item": {
                "title": "Item",
                "description": "Item model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the new item",
                        "type": "string",
                        "example": "A nice item"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description of the new item",
                        "type": "string",
                        "example": "This is new item's description"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "Deleted at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Item"
                }
            }
        }
    },
    "tags": [
        {
            "name": "Items",
            "description": "API Endpoints of Items"
        }
    ]
}